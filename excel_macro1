Sub SplitDescriptionToColumns()
    Dim ws As Worksheet
    Dim rng As Range
    Dim cell As Range
    Dim parts As Variant
    Dim subparts As Variant
    Dim i As Long, j As Long
    
    ' Set the worksheet and range
    Set ws = ThisWorkbook.Sheets("Sheet1") ' Change "Sheet1" to your sheet name
    Set rng = ws.Range("A2:A" & ws.Cells(ws.Rows.Count, "A").End(xlUp).Row) ' Adjust "A2:A" if necessary

    ' Loop through each cell in the range
    For Each cell In rng
        ' Split the string by commas
        parts = Split(cell.Value, ",")
        
        ' Loop through each part
        For i = LBound(parts) To UBound(parts)
            ' Split each part by the equals sign
            subparts = Split(parts(i), "=")
            
            ' Place the value in the appropriate column
            If UBound(subparts) > 0 Then
                cell.Offset(0, i + 1).Value = subparts(1)
            End If
        Next i
    Next cell
End Sub
###########################
Sub SplitLongDescription()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim sourceCol As String
    Dim destCol As Long
    Dim cell As Range
    Dim parts As Variant
    Dim i As Integer

    ' Define the worksheet and columns
    Set ws = ThisWorkbook.Sheets("Sheet1") ' Change "Sheet1" to your sheet name
    sourceCol = "A" ' Column with the long description
    destCol = 2 ' Starting column for the split data (B)

    ' Find the last row in the source column
    lastRow = ws.Cells(ws.Rows.Count, sourceCol).End(xlUp).Row

    ' Loop through each cell in the source column
    For Each cell In ws.Range(sourceCol & "1:" & sourceCol & lastRow)
        ' Split the cell content by "="
        parts = Split(cell.Value, "=")
        
        ' Loop through each part and place it in the corresponding column
        For i = LBound(parts) To UBound(parts)
            ws.Cells(cell.Row, destCol + i).Value = parts(i)
        Next i
    Next cell
End Sub
###########################
Sub SplitIssueString()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim cell As Range
    Dim splitParts As Variant
    Dim i As Long
    
    ' Set the worksheet and find the last row with data in column A
    Set ws = ThisWorkbook.Sheets("Sheet1") ' Change Sheet1 to your sheet name
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row

    ' Add headers for the new columns
    ws.Range("B1").Value = "Issuewith"
    ws.Range("C1").Value = "IssueDescription"
    ws.Range("D1").Value = "Version"
    
    ' Loop through each cell in column A
    For Each cell In ws.Range("A2:A" & lastRow) ' Assuming data starts from row 2
        If Left(cell.Value, 5) = "Issue" Then
            ' Split the string by the equal sign and new lines
            splitParts = Split(cell.Value, vbCrLf)
            For i = LBound(splitParts) To UBound(splitParts)
                If InStr(splitParts(i), "Issuewith=") > 0 Then
                    ws.Cells(cell.Row, "B").Value = Split(splitParts(i), "=")(1)
                ElseIf InStr(splitParts(i), "IssueDescription=") > 0 Then
                    ws.Cells(cell.Row, "C").Value = Split(splitParts(i), "=")(1)
                ElseIf InStr(splitParts(i), "version=") > 0 Then
                    ws.Cells(cell.Row, "D").Value = Split(splitParts(i), "=")(1)
                End If
            Next i
        End If
    Next cell
End Sub

------------------------------------------------
Sub ExtractValues()
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets(1) ' Change the sheet number if needed

    Dim LastRow As Long
    LastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row

    Dim headers As Object
    Set headers = CreateObject("Scripting.Dictionary")

    Dim i As Long
    For i = 1 To LastRow
        Dim parts() As String
        parts = Split(ws.Cells(i, 1).Value, "=")
        
        If UBound(parts) = 1 Then
            If Not headers.exists(parts(0)) Then
                headers(parts(0)) = headers.Count + 1
                ws.Cells(1, headers.Count + 1).Value = parts(0)
            End If
            ws.Cells(i + 1, headers(parts(0)) + 1).Value = parts(1)
        End If
    Next i
End Sub
----------------------------------------------------------------
Sub ExtractKeyValuePairs()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim keyValue As Variant
    Dim key As String
    Dim value As String
    Dim colIndex As Integer
    Dim cell As Range
    
    Set ws = ThisWorkbook.Sheets("Sheet1") ' Change "Sheet1" to your sheet name
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    colIndex = 1
    
    ' Clear previous results
    ws.Rows(1).Clear
    
    ' Iterate through each cell in column A
    For Each cell In ws.Range("A1:A" & lastRow)
        If cell.Value <> "" Then
            keyValue = Split(cell.Value, "=")
            If UBound(keyValue) = 1 Then
                key = keyValue(0)
                value = keyValue(1)
                
                ' Find the column index for the key
                On Error Resume Next
                colIndex = Application.Match(key, ws.Rows(1), 0)
                On Error GoTo 0
                
                ' If key not found, add to the next column
                If IsError(colIndex) Then
                    colIndex = ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column + 1
                    ws.Cells(1, colIndex).Value = key
                End If
                
                ' Add value to the corresponding column
                ws.Cells(cell.Row + 1, colIndex).Value = value
            End If
        End If
    Next cell
End Sub

--------------------------------------------------------------------
Sub TransformKeyValuePairs()
    Dim ws As Worksheet
    Dim Key As String, Value As String
    Dim KeyValueArray() As String
    Dim LastRow As Long, LastCol As Long
    Dim i As Long, j As Long
    Dim KeyDictionary As Object
    
    Set ws = ThisWorkbook.Sheets("Sheet1") ' Change "Sheet1" to your sheet name
    Set KeyDictionary = CreateObject("Scripting.Dictionary")
    
    LastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
    
    ' Loop through column A to extract key-value pairs
    For i = 1 To LastRow
        KeyValueArray = Split(ws.Cells(i, 1).Value, "=")
        If UBound(KeyValueArray) = 1 Then
            Key = Trim(KeyValueArray(0))
            Value = Trim(KeyValueArray(1))
            If Not KeyDictionary.exists(Key) Then
                KeyDictionary.Add Key, Key
                ws.Cells(1, KeyDictionary.Count).Value = Key
            End If
            ws.Cells(2, KeyDictionary(Key)).Value = Value
        End If
    Next i
    
    ' Autofit the columns for better visibility
    ws.Columns.AutoFit
End Sub
##################################################
Sub ConvertMultiLineToSingleString()
    Dim ws As Worksheet
    Dim cell As Range
    Dim multiLineText As String
    Dim singleLineText As String
    
    ' Set the worksheet (change "Sheet1" to your sheet name if necessary)
    Set ws = ThisWorkbook.Sheets("Sheet1")
    
    ' Loop through each cell in column A
    For Each cell In ws.Range("A1:A" & ws.Cells(ws.Rows.Count, "A").End(xlUp).Row)
        ' Check if the cell is not empty
        If Not IsEmpty(cell.Value) Then
            ' Read the multi-line text
            multiLineText = cell.Value
            ' Replace line breaks with a space (or any other delimiter you prefer)
            singleLineText = Replace(multiLineText, Chr(10), " ")
            ' Replace the cell value with the single-line text
            cell.Value = singleLineText
        End If
    Next cell
End Sub

        ' Update the cell with the new value
        cell.Value = newValue
    Next cell
End Sub

