def send(html_text, sub, mails, sender, attachment_path=None):
    import smtplib
    from email.mime.text import MIMEText
    from email.mime.multipart import MIMEMultipart
    from email.utils import formataddr
    from email.header import Header
    from email.mime.base import MIMEBase
    from email import encoders

    msg = MIMEMultipart("mixed")   # "mixed" allows body + attachment
    msg["From"] = formataddr((str(Header("Cluster Monitor", "utf-8")), sender))
    msg["To"] = mails
    msg["Subject"] = sub

    # Attach HTML body
    msg.attach(MIMEText(html_text, "html"))

    # Attach CSV if provided
    if attachment_path and os.path.exists(attachment_path):
        with open(attachment_path, "rb") as f:
            part = MIMEBase("application", "octet-stream")
            part.set_payload(f.read())
            encoders.encode_base64(part)
            part.add_header(
                "Content-Disposition",
                f"attachment; filename={os.path.basename(attachment_path)}",
            )
            msg.attach(part)

    # Send mail
    server = smtplib.SMTP("smtp-hub.ms.com")
    server.sendmail(sender, mails.split(","), msg.as_string())
    server.close()



csv_file = sys.argv[3]
dep_status = report_conversion(get_pod_status)

status_flag = "RED" if any(r["Status"].lower() != "running" for r in get_pod_status) else "GREEN"

send(
    dep_status,
    status_flag + " " + config['email']['subject'],
    config['email']['receiver'],
    config['email']['sender'],
    attachment_path=csv_file  # <-- CSV gets attached
)
